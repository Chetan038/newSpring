

server:
  port: 8080

spring:
  application:
    name: apiGateway
  cloud:
    gateway:
      routes:
        - id: service-b
          uri: lb://bService
          predicates:
            - Path=/service-b/**
  
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/



999




apiGateway

ApiGatewayApplication.java
package com.api.apiGateway;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;

@SpringBootApplication
@EnableDiscoveryClient
public class ApiGatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(ApiGatewayApplication.class, args);
	}

}


application.properties

spring.application.name=apiGateway


server.port=8080

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/




spring.cloud.gateway.routes[0].id=service-b
spring.cloud.gateway.routes[0].uri=lb://service-b
spring.cloud.gateway.routes[0].predicates[0]=Path=/service-b/**


------

bService

BServiceApplication.java

package com.serviceb.bService;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;

@SpringBootApplication
@EnableDiscoveryClient
public class BServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(BServiceApplication.class, args);
	}

}


ClientController.java

package com.serviceb.bService;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.reactive.function.client.WebClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;


@RestController
@RequestMapping("/service-b")
public class ClientController {


@GetMapping("/hello")
public String callServiceA() {
    return "bbbb";
}

}


application.properties

spring.application.name=bService

server.port=8082

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/


config-server

ConfigServerApplication.java
package com.example.config_server;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.config.server.EnableConfigServer;

@SpringBootApplication
@EnableConfigServer
public class ConfigServerApplication {

	public static void main(String[] args) {
		SpringApplication.run(ConfigServerApplication.class, args);
	}

}


application.properties

spring.application.name=config-server





server.port=8888

spring.profiles.active=native

spring.cloud.config.server.native.search-locations=file:///C:/config-repo




eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

demo

DempApplication.java
package com.servicereg.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;

@SpringBootApplication
@EnableEurekaServer
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

}


application.properties

spring.application.name=demo

server.port=8761

eureka.instance.hostname=localhost

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.server.wait-time-in-ms-when-sync-empty=0

eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

  


this is my microservice small project bservice and api gate way is showing in euruka dashboard
but api gateway is not dredirectrly not working localhost://8080/service-b/hello not working 
but localhost://8082/service-b/hello

guide step by step fix that tell where erro why itsnot working 
