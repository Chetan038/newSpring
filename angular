X [ERROR] TS-996008: Component EditEmpComponent is standalone, and cannot be declared in an NgModule. Did you 
mean to import it instead? [plugin angular-compiler]

    src/app/app.module.ts:25:4:
      25 â”‚     EditEmpComponent

fix this error 


solution 


{
  path: 'edit-emp/:id',
  component: EditEmpComponent,
  canActivate: [AuthGuard]
}


@@@@@@@@@
<td>
  <button (click)="editEmployee(employee.emp_ID)">Edit</button>
  <button (click)="deleteEmployee(employee.emp_ID)">Delete</button>
</td>


@@@

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { EmployeeService } from '../../services/employee.service';
import { Employee } from '../../services/employee.model';

@Component({
  selector: 'app-edit-emp',
  templateUrl: './edit-emp.component.html',
  styleUrl: './edit-emp.component.css'
})
export class EditEmpComponent implements OnInit {
  employee: Employee = {
    emp_ID: '',
    e_NAME: '',
    salary: '',
    department: '',
    status: '',
    phoneno: ''
  };

  constructor(
    private route: ActivatedRoute,
    private employeeService: EmployeeService,
    private router: Router
  ) {}

  ngOnInit(): void {
    const empId = this.route.snapshot.paramMap.get('id');
    if (empId) {
      this.employeeService.getEmployeeById(empId).subscribe((data) => {
        this.employee = data;
      });
    }
  }

  updateEmployee() {
    this.employeeService.updateEmployee(this.employee).subscribe(() => {
      alert('Employee updated successfully');
      this.router.navigate(['/dashboard']);
    });
  }
}



@@@

<h2>Edit Employee</h2>
<form (submit)="updateEmployee()">
  <label>Name:</label>
  <input type="text" [(ngModel)]="employee.e_NAME" name="e_NAME" required />

  <label>Salary:</label>
  <input type="text" [(ngModel)]="employee.salary" name="salary" required />

  <label>Department:</label>
  <input type="text" [(ngModel)]="employee.department" name="department" required />

  <label>Status:</label>
  <input type="text" [(ngModel)]="employee.status" name="status" required />

  <label>Phone Number:</label>
  <input type="text" [(ngModel)]="employee.phoneno" name="phoneno" required />

  <button type="submit">Update</button>
</form>


@@

import { FormsModule } from '@angular/forms';

@NgModule({
  imports: [FormsModule]
})

@@

getEmployeeById(empId: string): Observable<Employee> {
  return this.http.get<Employee>(`http://localhost:8080/api/employees/${empId}`);
}

updateEmployee(employee: Employee): Observable<Employee> {
  return this.http.put<Employee>(`http://localhost:8080/api/employees/update/${employee.emp_ID}`, employee);
}




import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { EmployeeService } from '../services/employee.service';
import { FormBuilder, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-edit-employee',
  templateUrl: './edit-employee.component.html',
  styleUrls: ['./edit-employee.component.css']
})
export class EditEmployeeComponent implements OnInit {
  editEmployeeForm!: FormGroup;
  departments = ['HR', 'Finance', 'Engineering', 'Sales']; // Sample departments
  employeeId!: number;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private employeeService: EmployeeService,
    private fb: FormBuilder
  ) {}

  ngOnInit(): void {
    this.employeeId = +this.route.snapshot.paramMap.get('id')!;
    this.editEmployeeForm = this.fb.group({
      name: [''],
      email: [''],
      department: ['']
    });

    this.loadEmployee();
  }

  loadEmployee() {
    this.employeeService.getEmployeeById(this.employeeId).subscribe((data) => {
      this.editEmployeeForm.patchValue({
        name: data.name,
        email: data.email,
        department: data.department
      });
    });
  }

  updateEmployee() {
    this.employeeService.updateEmployee(this.employeeId, this.editEmployeeForm.value).subscribe(() => {
      alert('Employee updated successfully');
      this.router.navigate(['/employees']); // Redirect to employee list
    });
  }
}


@@@


<h2>Edit Employee</h2>
<form [formGroup]="editEmployeeForm" (ngSubmit)="updateEmployee()">
  <label>Name:</label>
  <input type="text" formControlName="name" required /><br />

  <label>Email:</label>
  <input type="email" formControlName="email" required /><br />

  <label>Department:</label>
  <select formControlName="department">
    <option *ngFor="let dept of departments" [value]="dept">{{ dept }}</option>
  </select><br />

  <button type="submit">Update</button>
</form>


@@@

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class EmployeeService {
  private apiUrl = 'http://localhost:8080/employees'; // Update with actual backend API URL

  constructor(private http: HttpClient) {}

  getEmployeeById(id: number): Observable<any> {
    return this.http.get(`${this.apiUrl}/${id}`);
  }

  updateEmployee(id: number, employeeData: any): Observable<any> {
    return this.http.put(`${this.apiUrl}/${id}`, employeeData);
  }
}
@@

