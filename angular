this is my logincomponet .ts
import { Component, OnInit } from '@angular/core';
import { LoginService } from '../../services/login.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-login',
  standalone: false,
  templateUrl: './login.component.html',
  styleUrl: './login.component.css'
})
export class LoginComponent implements OnInit{


  public msg=false;

  credentials={
    email:'',
    password:''
  }
  constructor(private readonly LoginServices:LoginService,private router:Router){}
  ngOnInit(): void {
    // 
  
    
  }

  onSubmit(){

    if(this.credentials.email!=''&&this.credentials.password!='')
    {
      console.log("ok");       
      this.LoginServices.generateToken(this.credentials)
      .subscribe((Response:any)=>{console.log(Response.token);
        this.LoginServices.logInUser(Response.token)
       
        this.router.navigate(['home']);
        
      })
     
     
    }
   
    else{
      this.msg=true;
      console.log("not ok");
    }
    
  }

}


this is my logincomponent.html
<div class="login-container">
    <div class="login-card">
      <h2 class="login-title">Admin Login</h2>
      <form (ngSubmit)="onSubmit()">
        <div class="form-group">
          <input
            type="email"
            placeholder="Email"
            name="email"
            [(ngModel)]="credentials.email"
            required
            class="form-input"
          />
        </div>
        <div class="form-group">
          <input
            type="password"
            placeholder="Password"
            name="password"
            [(ngModel)]="credentials.password"
            required
            class="form-input"
          />
        </div>
        <button type="submit" class="login-button">Login</button>
        <h3 *ngIf="msg">Invalid Credentials</h3>
      </form>

     
    </div>
  </div>
  

login.srvice.ts
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class LoginService {

  url="http://localhost:8080"

  private loginStatus= new BehaviorSubject<boolean>(this.isLoggedIn());

  constructor(private readonly http:HttpClient) { }



  generateToken(credientials:any){
    return this.http.post(`${this.url}/api/login`,credientials);
  }

  logInUser(token :string)
  {
    localStorage.setItem("token",token)
    this.loginStatus.next(true);
    return true;
  }


  isLoggedIn(){
    let token=localStorage.getItem("token")
    if(token==undefined || token=='' || token==null)
    {
      return false;
    }
    else{
      return true;
    }
  }

  logout(){
    localStorage.removeItem("token");
    this.loginStatus.next(false);
    return true;
  }

  getToken(){
    return localStorage.getItem('token');
  }

  getLoginStatus(){
    return this.loginStatus.asObservable();
    }
}

authgurad.ts
import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { LoginService } from './login.service';

@Injectable({
  providedIn: 'root',
})
export class AuthGuard implements CanActivate {
  constructor(private loginService:LoginService,private router:Router) {}

  canActivate(): boolean | Observable<boolean> {
 
    if (this.loginService.isLoggedIn()) {
      return true;
    }
   
     this.router.navigate(['login'])

    return false;
  }
}


