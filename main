

This is my Employe management project using spring boot ,jsp ,oracle database, mvc

this is my file struture and code files

src/main/java
com.chetan.main->SpringBootAppApplication.java
com.chetan.main.controllers->MyController.java,EmployeeController.java
com.chetan.main.entities->User.java,Employee.java
com.chetan.main.repositories->UserRepository.java,EmployeeRepository.java
com.chetan.main.Services->UserService.java,UserServicelmpl.java,EmployeeService.java,EmployeeServielmpl.java

src/main/webapp/views/->login.jsp,register.jsp,add_employee.jsp,edit_employee.jsp,home.jsp


SpringBootAppApplication.java
package com.chetan.main;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SpringBootWebAppApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringBootWebAppApplication.class, args);
	}

}


MyController.java
package com.chetan.main.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.chetan.main.Services.UserService;
import com.chetan.main.entities.User;

import org.springframework.ui.Model;



@Controller
public class MyController {
	
	@Autowired
	private UserService userService;
	
	@GetMapping("/reg")
	public String openRegPage(Model modle)
	{
		modle.addAttribute("user",new User());
		return "register";
	}
	@GetMapping("/loginPage")
	public String openLoginPage(Model model)
	{
	    model.addAttribute("user", new User());	
		return "login";
	}
	
	
	@PostMapping("/loginForm")
	public String submitLoginForm(@ModelAttribute("user") User user,Model model) {
		
	    User validUser= userService.loginUser(user.getEmail(),user.getPassword());
	    
	    if(validUser!=null)
	    {
	    	return "profile";
	    }
	    else {
	    	model.addAttribute("errorMsg", "User not registered scussefully");
	    	return "login";
	    }
		
	}
	
	@PostMapping("/regForm")
	public String submitRegForm(@ModelAttribute("user") User user,Model model)
	{
		boolean status=userService.reisterUser(user);
		if(status)
		{
			model.addAttribute("successMsg", "User registered scussefully");
		}
		else {
			model.addAttribute("errorMsg", "User not registered scussefully");
			
		}
			
		return "register";
	}

}

User.java
package com.chetan.main.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name="USERR",schema="NEWSO")
public class User {

	
	@Id

	@Column(name="id",nullable=false)
	private int id;
	@Column
	private String name;
	@Column
	private String email;
	@Column
	private String password;
	@Column
	private String phoneno;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getPhoneno() {
		return phoneno;
	}
	public void setPhoneno(String phoneno) {
		this.phoneno = phoneno;
	}
	
	
}

UserRepository.java
package com.chetan.main.repositories;


import org.springframework.data.jpa.repository.JpaRepository;

import com.chetan.main.entities.User;



public interface UserRepository extends JpaRepository<User, Integer>{
	User findByEmail(String email);

}

UserService.java
package com.chetan.main.Services;

import com.chetan.main.entities.User;

public interface UserService {
	
	public boolean reisterUser(User user);
	public User loginUser(String email,String password);

}

UserServicelmpl.java
package com.chetan.main.Services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.chetan.main.entities.User;
import com.chetan.main.repositories.UserRepository;


@Service
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserRepository userRepository;

	@Override
	public boolean reisterUser(User user) {
		// TODO Auto-generated method stub
		try {
		userRepository.save(user);
		return true;
		}
		catch(Exception e) {return false;}
		
	}

	@Override
	public User loginUser(String email, String password) {
		User validUser =userRepository.findByEmail(email);
		if(validUser!=null && validUser.getPassword().equals(password))
		{
			return validUser;
		}
		return null;
	}
	

}

EmployeeController.java

package com.chetan.main.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import com.chetan.main.entities.Employee;
import com.chetan.main.Services.EmployeeService;

@Controller
public class EmployeeController {

    @Autowired
    private EmployeeService employeeService;

    @GetMapping("/home")
    public String homePage(Model model) {
        model.addAttribute("employees", employeeService.getAllEmployees());
        return "home";
    }

    @GetMapping("/addEmployee")
    public String addEmployeeForm(Model model) {
        model.addAttribute("employee", new Employee());
        return "add_employee";
    }

    @PostMapping("/saveEmployee")
    public String saveEmployee(@ModelAttribute Employee employee) {
        employeeService.saveEmployee(employee);
        return "redirect:/home";
    }

    @GetMapping("/editEmployee/{EMP_ID}")
    public String editEmployee(@PathVariable String EMP_ID, Model model) {
        model.addAttribute("employee", employeeService.getEmployeeById(EMP_ID));
        return "edit_employee";
    }

    @PostMapping("/updateEmployee")
    public String updateEmployee(@ModelAttribute Employee employee) {
        employeeService.updateEmployee(employee);
        return "redirect:/home";
    }

    @GetMapping("/deleteEmployee/{EMP_ID}")
    public String deleteEmployee(@PathVariable String EMP_ID) {
        employeeService.deleteEmployee(EMP_ID);
        return "redirect:/home";
    }
}


Employee.java

package com.chetan.main.entities;

import java.io.Serializable;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name="EMPLOYEE", schema="NEWSO")

public class Employee implements Serializable{
	
	@Id
	@Column(name="",nullable=false)
	private String EMP_ID;
	@Column(name="",nullable=false)
	private String E_NAME;
	@Column(name="",nullable=false)
	private Double SALARY;
	@Column(name="",nullable=false)
	private String DEPARTMENT;
	@Column(name="",nullable=false)
	private String STATUS;
	@Column(name="",nullable=false)
	private String PHONENO;
	public String getEMP_ID() {
		return EMP_ID;
	}
	public void setEMP_ID(String eMP_ID) {
		EMP_ID = eMP_ID;
	}
	public String getE_NAME() {
		return E_NAME;
	}
	public void setE_NAME(String e_NAME) {
		E_NAME = e_NAME;
	}
	public Double getSALARY() {
		return SALARY;
	}
	public void setSALARY(Double sALARY) {
		SALARY = sALARY;
	}
	public String getDEPARTMENT() {
		return DEPARTMENT;
	}
	public void setDEPARTMENT(String dEPARTMENT) {
		DEPARTMENT = dEPARTMENT;
	}
	public String getSTATUS() {
		return STATUS;
	}
	public void setSTATUS(String sTATUS) {
		STATUS = sTATUS;
	}
	public String getPHONENO() {
		return PHONENO;
	}
	public void setPHONENO(String pHONENO) {
		PHONENO = pHONENO;
	}
	
	

}


EmployeeRepository.java
package com.chetan.main.repositories;

import org.springframework.data.jpa.repository.JpaRepository;

import com.chetan.main.entities.Employee;

public interface EmployeeRepository extends JpaRepository<Employee, String>{

}

EmployeeService.java
package com.chetan.main.Services;

import java.util.List;

import com.chetan.main.entities.Employee;

public interface EmployeeService {
	
	List<Employee> getAllEmployees();
	Employee getEmployeeById(String EMP_ID);
	void saveEmployee(Employee employee);
	void updateEmployee(Employee employee);
	void deleteEmployee(String EMP_ID);

}

EmployeeServielmpl.java

package com.chetan.main.Services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.chetan.main.entities.Employee;
import com.chetan.main.repositories.EmployeeRepository;
import java.util.List;

@Service
public class EmployeeServiceImpl implements EmployeeService {

    @Autowired
    private EmployeeRepository employeeRepository;

    @Override
    public List<Employee> getAllEmployees() {
        return employeeRepository.findAll();
    }

    @Override
    public Employee getEmployeeById(String EMP_ID) {
        return employeeRepository.findById(EMP_ID).orElse(null);
    }

    @Override
    public void saveEmployee(Employee employee) {
        employeeRepository.save(employee);
    }

    @Override
    public void updateEmployee(Employee employee) {
        employeeRepository.save(employee);
    }

    @Override
    public void deleteEmployee(String EMP_ID) {
        employeeRepository.deleteById(EMP_ID);
    }
}

login.jsp


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Login</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(135deg, #ff9a9e, #fad0c4);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .container {
        background: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
        animation: fadeIn 0.8s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    h1 {
        color: #ff477e;
        margin-bottom: 20px;
    }
    input {
        width: 90%;
        padding: 10px;
        margin: 10px 0;
        border: none;
        border-radius: 10px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }
    input[type="submit"] {
        background: #ff477e;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }
    input[type="submit"]:hover {
        background: #ff2d64;
    }
    a {
        display: block;
        margin-top: 15px;
        text-decoration: none;
        color: #ff477e;
        font-weight: bold;
        transition: 0.3s;
    }
    a:hover {
        color: #ff2d64;
    }
    h4 {
        color: red;
    }
</style>
</head>
<body>

<div class="container">
    <h1>Login Here</h1>

    <c:if test="${not empty errorMsg}">
        <h4>${errorMsg}</h4>
    </c:if>

    <form action="loginForm" method="post">   
        <input type="email" name="email" placeholder="Email" required /><br/>
        <input type="password" name="password" placeholder="Password" required /><br/>
        <input type="submit" value="Login">
    </form>

    <a href="reg">Not registered? Register here</a>
</div>

</body>
</html>

home.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Employee Management</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(135deg, #ff9a9e, #fad0c4);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .container {
        background: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        width: 80%;
        text-align: center;
        animation: fadeIn 0.8s ease-in-out;
        overflow-x: auto;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    h2 {
        color: #ff477e;
        margin-bottom: 20px;
    }
    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
    }
    th {
        background: #ff477e;
        color: white;
    }
    a {
        text-decoration: none;
        color: #ff477e;
        font-weight: bold;
        transition: 0.3s;
    }
    a:hover {
        color: #ff2d64;
    }
    .btn {
        display: inline-block;
        padding: 10px 15px;
        background: #ff477e;
        color: white;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: 0.3s;
    }
    .btn:hover {
        background: #ff2d64;
    }
</style>
</head>
<body>

<div class="container">
    <h2>Employee List</h2>
    <table>
        <tr>
            <th>Emp ID</th><th>Name</th><th>Salary</th><th>Department</th><th>Status</th><th>Phone No</th><th>Actions</th>
        </tr>
        <c:forEach var="emp" items="${employees}">
            <tr>
                <td>${emp.empId}</td>
                <td>${emp.name}</td>
                <td>${emp.salary}</td>
                <td>${emp.department}</td>
                <td>${emp.status}</td>
                <td>${emp.phoneNo}</td>
                <td>
                    <a href="editEmployee/${emp.empId}">Edit</a> |
                    <a href="deleteEmployee/${emp.empId}">Delete</a>
                </td>
            </tr>
        </c:forEach>
    </table>
    <a href="addEmployee" class="btn">Add New Employee</a>
    <a href="logout" class="btn">Logout</a>
</div>

</body>
</html>

add_employee.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Add Employee</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(135deg, #ff9a9e, #fad0c4);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .container {
        background: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
        animation: fadeIn 0.8s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    h2 {
        color: #ff477e;
        margin-bottom: 20px;
    }
    input {
        width: 90%;
        padding: 10px;
        margin: 10px 0;
        border: none;
        border-radius: 10px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }
    input[type="submit"] {
        background: #ff477e;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }
    input[type="submit"]:hover {
        background: #ff2d64;
    }
</style>
</head>
<body>

<div class="container">
    <h2>Add Employee</h2>
    <form action="saveEmployee" method="post">
        <input type="text" name="empId" placeholder="Emp ID" required /><br>
        <input type="text" name="name" placeholder="Name" required /><br>
        <input type="number" name="salary" placeholder="Salary" required /><br>
        <input type="text" name="department" placeholder="Department" required /><br>
        <input type="text" name="status" placeholder="Status" required /><br>
        <input type="text" name="phoneNo" placeholder="Phone No" required /><br>
        <input type="submit" value="Save Employee">
    </form>
</div>

</body>
</html>


edit_employee.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Edit Employee</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(135deg, #ff9a9e, #fad0c4);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .container {
        background: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
        animation: fadeIn 0.8s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    h2 {
        color: #ff477e;
        margin-bottom: 20px;
    }
    input {
        width: 90%;
        padding: 10px;
        margin: 10px 0;
        border: none;
        border-radius: 10px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }
    input[type="submit"] {
        background: #ff477e;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }
    input[type="submit"]:hover {
        background: #ff2d64;
    }
</style>
</head>
<body>

<div class="container">
    <h2>Edit Employee</h2>
    <form action="updateEmployee" method="post">
        <input type="hidden" name="empId" value="${employee.empId}" />
        <input type="text" name="name" value="${employee.name}" required /><br>
        <input type="number" name="salary" value="${employee.salary}" required /><br>
        <input type="submit" value="Update Employee">
    </form>
</div>

</body>
</html>

pom.xml

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.chetan</groupId>
	<artifactId>SpringBootWebApp</artifactId>
	<version>1.0</version>
	<name>SpringBootWebApp</name>
	<description>Demo project for Spring Boot</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--
		https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api -->
		<dependency>
			<groupId>jakarta.servlet.jsp.jstl</groupId>
			<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			<version>3.0.0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jasper -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jasper</artifactId>
			<version>10.1.34</version>
		</dependency>

		<dependency>
			<groupId>com.chetan</groupId>
			<artifactId>SpringBootWebApp</artifactId>
			<version>1.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>


appicaiton.properties
spring.application.name=SpringBootWebApp
spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=NEWCU
spring.datasource.password=NEWCU_pwd


spring.jpa.show-sql=true


this is my project fix the error make change where possible and fix this when i am login in the home page is not displaying 
