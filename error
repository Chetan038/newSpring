this is my file stuture 
com.boostmytool.empstore.controllers->UserController.java
com.boostmytool.empstore.models->User.java
com.boostmytool.empstore.services->UserRepository.java

templates/employess/login.html (themyleaf)

UserController.java

User.java

UserRepository.java

package com.boostmytool.empstore.controllers;



import com.boostmytool.empstore.models.User;
import com.boostmytool.empstore.services.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.servlet.http.HttpSession;
import java.util.Optional;

@Controller
public class UserController {

    @Autowired
    private UserRepository userRepository; // Using the UserRepository as service

    @GetMapping("/login")
    public String loginPage() {
        return "employees/login";
    }

    @PostMapping("/login")
    public String loginUser(@RequestParam String email, @RequestParam String password, HttpSession session, Model model) {
        Optional<User> optionalUser = userRepository.findByEmail(email);

        if (optionalUser.isEmpty() || !optionalUser.get().getPASSWORD().equals(password)) {
            model.addAttribute("error", "Invalid email or password");
            return "employees/login";
        }

        session.setAttribute("loggedInUser", optionalUser.get());
        return "redirect:/home";
    }

    @GetMapping("/home")
    public String homePage(HttpSession session, Model model) {
        User loggedInUser = (User) session.getAttribute("loggedInUser");

        if (loggedInUser == null) {
            return "redirect:/login";
        }

        model.addAttribute("user", loggedInUser);
        return "employees/home";
    }

    @GetMapping("/logout")
    public String logout(HttpSession session) {
        session.invalidate();
        return "redirect:/login";
    }
}

User.java

package com.boostmytool.empstore.models;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name="USERR", schema="NEWSO")
public class User {

	
	@Id
	@Column(name="email", nullable=false)
	private String EMAIL;
	
	
	@Column(nullable=false)
	private String NAME;
	
	
	
	@Column(nullable=false)
	private String PASSWORD;



	public String getNAME() {
		return NAME;
	}

	public void setNAME(String nAME) {
		NAME = nAME;
	}

	public String getEMAIL() {
		return EMAIL;
	}

	public void setEMAIL(String eMAIL) {
		EMAIL = eMAIL;
	}

	public String getPASSWORD() {
		return PASSWORD;
	}

	public void setPASSWORD(String pASSWORD) {
		PASSWORD = pASSWORD;
	}
	
	
	
}

UserRepository.java

package com.boostmytool.empstore.services;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Service;

import com.boostmytool.empstore.models.Employee;
import com.boostmytool.empstore.models.User;


@Service
public interface UserRepository extends JpaRepository<User, String>{
	
Optional<User> findByEmail(String email);


}

login.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Login</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <h2>Login</h2>
    <form action="/login" method="post">
        <div>
            <label>Email:</label>
            <input type="email" name="email" required>
        </div>
        <div>
            <label>Password:</label>
            <input type="password" name="password" required>
        </div>
        <button type="submit">Login</button>
        <p th:if="${error}" th:text="${error}" style="color: red;"></p>
    </form>
</body>
</html>

now fix the eroor in this my database USERR table have NAME,EMAIL,PASSWORD,PHONENO and ID which is 0 just ignore this id coloum


